apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.redis.namespace }}
  labels:
    type: system
    dockerpublic: okay
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: redis-credentials
  namespace: {{ .Values.redis.namespace }}
spec:
  secretStoreRefs:
    - name: {{ .Values.secretStore.readWriteStore }}
      kind: SecretStore
  selector:
    secret:
      name: rabbitmq-credentials
  template:
    data:
      hostname: {{ .Values.redis.releaseName }}-headless.{{ .Values.redis.namespace }}.svc.cluster.local
      url: "redis://{{ .Values.redis.releaseName }}-headless.{{ .Values.redis.namespace }}.svc.cluster.local:6379"
  data:
    - match:
        secretKey: hostname
        remoteRef:
          remoteKey: redis
          property: hostname
    - match:
        secretKey: url
        remoteRef:
          remoteKey: redis
          property: url
    - match:
        secretKey: url
        remoteRef:
          remoteKey: redis
          property: CACHE_URL
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-redis
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  syncPolicy:
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ .Values.redis.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: redis
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: {{ .Values.redis.version }}
    helm:
      releaseName: {{ .Values.redis.releaseName }}
      values: |-
        fullnameOverride: {{ .Values.redis.releaseName }}

        global:
          image:
            pullSecrets:
              - name: cluster-docker-public

        auth:
          enabled: false

        master:
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}

          extraFlags:
            - --maxmemory-policy
            - allkeys-lru

          persistence:
            enabled: false

          serviceAccount:
            create: false

        replica:
          replicaCount: 0

        networkPolicy:
          enabled: false

        serviceAccount:
          create: false