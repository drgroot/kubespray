apiVersion: v1
kind: Secret
metadata:
  name: spark-defaults
stringData:
  sparkdefaults: |
    spark.jars.packages org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.7.0,org.apache.iceberg:iceberg-aws-bundle:1.7.0,io.delta:delta-spark_2.12:3.2.0
    spark.sql.extensions org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions,io.delta.sql.DeltaSparkSessionExtension
    spark.sql.catalog.spark_catalog org.apache.iceberg.spark.SparkSessionCatalog
    spark.sql.catalog.spark_catalog.type hive
    spark.sql.catalog.lake org.apache.iceberg.spark.SparkCatalog
    spark.sql.catalog.lake.type rest
    spark.sql.catalog.lake.uri https://catalog.{{ .Values.domains.external }}
    spark.sql.catalog.lake.io-impl org.apache.iceberg.aws.s3.S3FileIO
    spark.sql.catalog.lake.default-namespace default
    spark.sql.catalog.lake.warehouse s3://{{ .Values.storageClass.warehouse }}
    spark.sql.catalog.lake.s3.endpoint https://s3.{{ .Values.domains.external }}
    spark.sql.defaultCatalog lake
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: spark
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  destination:
    namespace: {{ .Release.Namespace }}
    server: https://kubernetes.default.svc
  project: {{ .Values.project }}
  source:
    chart: spark
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: {{ .Values.versions.sparkchart }}
    helm:
      releaseName: s3
      values: |-
        fullnameOverride: spark

        image:
          tag: {{ .Values.versions.spark }}

        master:
          configOptions:
            -Dspark.ui.reverseProxy=true
            -Dspark.ui.reverseProxyUrl=http://spark.{{ .Values.domains.internal }}

          extraEnvVars:
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-root-credential
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-root-credential
                  key: secretkey
          extraVolumes:
            - name: spark-defaults
              secret:
                secretName: spark-defaults
          extraVolumeMounts:
            - name: spark-defaults
              mountPath: /opt/bitnami/spark/conf/spark-defaults.conf
              subPath: sparkdefaults

          networkPolicy:
            enabled: false

        worker:
          replicaCount: 1

          configOptions:
            -Dspark.ui.reverseProxy=true
            -Dspark.ui.reverseProxyUrl=http://spark.{{ .Values.domains.internal }}

          extraEnvVars:
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-root-credential
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-root-credential
                  key: secretkey
          extraVolumes:
            - name: spark-defaults
              secret:
                secretName: spark-defaults
          extraVolumeMounts:
            - name: spark-defaults
              mountPath: /opt/bitnami/spark/conf/spark-defaults.conf
              subPath: sparkdefaults

          networkPolicy:
            enabled: false

          autoscaling:
            enabled: true
            maxReplicas: 5
            targetCPU: 50

        ingress:
          enabled: true
          ingressClassName: nginx
          hostname: spark.{{ .Values.domains.internal }}

        serviceAccount:
          create: false