apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: redis-credentials
  namespace: {{ .Values.middleware.namespace }}
spec:
  secretStoreRefs:
    - name: kubernetes
      kind: ClusterSecretStore
  selector:
    secret:
      name: rabbitmq-credentials
  template:
    data:
      hostname: redis-headless.{{ .Values.middleware.namespace }}.svc.cluster.local
      url: "redis://redis-headless.{{ .Values.middleware.namespace }}.svc.cluster.local:6379"
  data:
    - match:
        secretKey: hostname
        remoteRef:
          remoteKey: redis
          property: hostname
    - match:
        secretKey: url
        remoteRef:
          remoteKey: redis
          property: url
    - match:
        secretKey: url
        remoteRef:
          remoteKey: redis
          property: CACHE_URL
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bootstrap-external-redis
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ .Values.middleware.namespace }}
    server: https://kubernetes.default.svc
  project: {{ .Values.project }}
  source:
    chart: redis
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: {{ .Values.versions.redis }}
    helm:
      releaseName: redis
      values: |-
        fullnameOverride: redis

        global:
          image:
            pullSecrets:
              - name: cluster-docker-public

        auth:
          enabled: false

        master:
          resources: {}

          extraFlags:
            - --maxmemory-policy
            - allkeys-lru

          persistence:
            enabled: false

          serviceAccount:
            create: false

        replica:
          replicaCount: 0

        networkPolicy:
          enabled: false

        serviceAccount:
          create: false