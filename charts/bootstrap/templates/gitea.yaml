apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitea-email-secrets
spec:
  secretStoreRef:
    name: external-infra
    kind: ClusterSecretStore
  target:
    name: gitea-email-secrets
  data:
    - remoteRef:
        key: SMTP
        property: SMTP_HOST
      secretKey: SMTP_HOST
    - remoteRef:
        key: SMTP
        property: SMTP_PASSWORD
      secretKey: SMTP_PASSWORD
    - remoteRef:
        key: SMTP
        property: SMTP_PORT
      secretKey: SMTP_PORT
    - remoteRef:
        key: SMTP
        property: SMTP_SECURITY
      secretKey: SMTP_SECURITY
    - remoteRef:
        key: SMTP
        property: SMTP_USERNAME
      secretKey: SMTP_USERNAME
    - remoteRef:
        key: SMTP
        property: SMTP_FROM_DOMAIN
      secretKey: SMTP_FROM_DOMAIN
    - remoteRef:
        key: SMTP
        property: SMTP_FROM_EMAIL
      secretKey: SMTP_FROM_EMAIL
    - remoteRef:
        key: SMTP
        property: SMTP_FROM_USER
      secretKey: SMTP_FROM_USER
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitea-postgres-secrets
spec:
  secretStoreRef:
    name: kubernetes
    kind: ClusterSecretStore
  target:
    name: gitea-postgres-secrets
  data:
    - remoteRef:
        key: main-postgres-credentials
        property: password
      secretKey: password
    - remoteRef:
        key: main-postgres-credentials
        property: username
      secretKey: username
    - remoteRef:
        key: main-postgres-credentials
        property: schema
      secretKey: schema
    - remoteRef:
        key: main-postgres-credentials
        property: hostname
      secretKey: hostname
    - remoteRef:
        key: main-postgres-credentials
        property: database
      secretKey: database
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  metadata:
  name: bootstrap-external-gitea
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ .Release.Namespace }}
    server: https://kubernetes.default.svc
  project: {{ .Values.project }}
  source:
    path: .
    repoURL: https://gitea.com/gitea/helm-chart.git
    targetRevision: HEAD
    helm:
      releaseName: gitea
      values: |-
        replicaCount: 1

        strategy:
          type: Recreate

        service:
          ssh:
            port: 2222

        ingress:
          enabled: true
          className: nginx
          hosts:
            - host: git.{{ .Values.domains.external }}
              paths:
                - path: /
                  pathType: Prefix
          annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
            external-dns.alpha.kubernetes.io/target: "mordorhome.{{ .Values.domains.external }}"
          tls:
            - hosts:
                - "*.{{ .Values.domains.external }}"
              secretName: wildcard-yusufali
        
        resources: {}

        deployment:
          env: []

        persistence:
          enabled: true
          storageClass: nfs-thorin-dynamic
        
        gitea:
          additionalConfigFromEnvs:
            - name: GITEA__DATABASE__DB_TYPE
              value: postgres
            - name: GITEA__DATABASE__HOST
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secrets
                  key: hostname
            - name: GITEA__DATABASE__NAME
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secrets
                  key: database
            - name: GITEA__DATABASE__SCHEMA
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secrets
                  key: schema
            - name: GITEA__DATABASE__USER
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secrets
                  key: username
            - name: GITEA__DATABASE__PASSWD
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secrets
                  key: password

            - name: GITEA__MAILER__SMTP_ADDR
              valueFrom:
                secretKeyRef:
                  name: gitea-email-secrets
                  key: SMTP_HOST
            - name: GITEA__MAILER__SMTP_PORT
              valueFrom:
                secretKeyRef:
                  name: gitea-email-secrets
                  key: SMTP_PORT
            - name: GITEA__MAILER__USER
              valueFrom:
                secretKeyRef:
                  name: gitea-email-secrets
                  key: SMTP_USERNAME
            - name: GITEA__MAILER__PASSWD
              valueFrom:
                secretKeyRef:
                  name: gitea-email-secrets
                  key: SMTP_PASSWORD
            - name: GITEA__MAILER__FROM
              valueFrom:
                secretKeyRef:
                  name: gitea-email-secrets
                  key: SMTP_FROM_EMAIL

          config:
            service:
              DISABLE_REGISTRATION: true
              DEFAULT_ORG_VISIBILITY: limited

            server:
              DOMAIN: git.{{ .Values.domains.external }}
              ROOT_URL: https://git.{{ .Values.domains.external }}
              SSH_DOMAIN: gitea-ssh.{{ .Release.Namespace }}.svc.cluster.local
              MINIMUM_KEY_SIZE_CHECK: false
              SSH_PORT: 2222
              SSH_LISTEN_PORT: 2222
            
            repository:
              DISABLED_REPO_UNITS: repo.wiki,repo.projects,repo.packages,repo.ext_issues,repo.ext_wiki
              DEFAULT_REPO_UNITS: repo.code,repo.releases,repo.pulls,repo.actions,repo.issues
              DISABLE_STARS: true
            
            packages:
              enabled: false

            webhook:
              ALLOWED_HOST_LIST: '*'
            
            migrations:
              ALLOW_LOCALNETWORKS: true
              ALLOWED_DOMAINS: '*'

            mailer:
              enabled: true
              protocol: smtp+starttls

            queue:
              TYPE: redis
              CONN_STR: redis://redis-headless.{{ .Release.Namespace }}.svc.cluster.local:6379/0
            session:
              PROVIDER: redis
              PROVIDER_CONFIG: redis://redis-headless.{{ .Release.Namespace }}.svc.cluster.local:6379/0
            cache:
              ENABLED: true
              ADAPTER: redis
              HOST: redis://redis-headless.{{ .Release.Namespace }}.svc.cluster.local:6379/0
            
            ssh:
              minimum_key_sizes:
                RSA: 2048
        
        redis-cluster:
          enabled: false
        
        postgresql-ha:
          enabled: false
        
        postgresql:
          enabled: false
