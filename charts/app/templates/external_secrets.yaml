apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.externalsecrets.namespace }}
  labels:
    type: system
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-externalsecrets
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ .Values.externalsecrets.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: external-secrets
    repoURL: https://charts.external-secrets.io
    targetRevision: {{ .Values.externalsecrets.version }}
    helm:
      releaseName: externalsecrets
      values: |-
        installCRDs: true

        promethus:
          enabled: false
---
{{- range $config := .Values.stores }}
---
apiVersion: external-secrets.io/v1beta1
{{- if eq $config.kind "SecretStore" }}
kind: SecretStore
{{- else }}
kind: ClusterSecretStore
{{- end }}
metadata:
  name: {{ $config.name }}
  {{- if eq $config.kind "SecretStore" }}
  namespace: {{ $config.namespace }}
  {{- end }}
spec:
  provider:
    vault:
      server: {{ $config.server }}
      path: {{ $config.path | default $config.name }}
      version: "v2"
      auth:
        userPass:
          path: "userpass"
          username: {{ $config.username }}
          secretRef:
            name: {{ $config.secretName }}
            key: password
            {{- if eq $config.kind "SecretStore" }}
            {{- else }}
            namespace: default
            {{- end }}
---
{{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: cluster-docker-public
spec:
  externalSecretName: cluster-docker-public
  namespaceSelector:
    matchLabels:
      dockerpublic: okay
  externalSecretSpec:
    secretStoreRef:
      name: {{ .Values.secretStore.name }}
      kind: {{ .Values.secretStore.kind }}
    target:
      name: cluster-docker-public
      template:
        type: kubernetes.io/dockerconfigjson
        {{- with $.Values.dockerconfigTemplate }}
        data:
{{ toYaml . | indent 10 }}
        {{- end }}
    data:
      - remoteRef:
          key: DOCKER_PUBLIC
          property:  username 
        secretKey: USERNAME
      - remoteRef:
          key: DOCKER_PUBLIC
          property:  password 
        secretKey: PASSWORD
      - remoteRef:
          key: DOCKER_PUBLIC
          property: host
        secretKey: HOST
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: cluster-docker-private
spec:
  externalSecretName: cluster-docker-private
  namespaceSelector:
    matchLabels:
      dockerprivate: okay
  externalSecretSpec:
    secretStoreRef:
      name: {{ .Values.secretStore.name }}
      kind: {{ .Values.secretStore.kind }}
    target:
      name: cluster-docker-private
      template:
        type: kubernetes.io/dockerconfigjson
        {{- with $.Values.dockerconfigTemplate }}
        data:
{{ toYaml . | indent 10 }}
        {{- end }}
    data:
      - remoteRef:
          key: DOCKER_PRIVATE
          property:  username 
        secretKey: USERNAME
      - remoteRef:
          key: DOCKER_PRIVATE
          property:  password 
        secretKey: PASSWORD
      - remoteRef:
          key: DOCKER_PRIVATE
          property: host
        secretKey: HOST
---