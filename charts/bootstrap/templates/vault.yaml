apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ .Values.storage.default }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  labels:
    app: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      volumes:
        - name: vaultdata
          persistentVolumeClaim:
            claimName: vault
      containers:
        - name: app
          image: hashicorp/vault
          command:
            - vault
          args:
            - server
            - -config=/vault/config/config.hcl
          ports:
            - containerPort: 8200
          env:
            - name: VAULT_ADDR
              value: http://127.0.0.1:8200
          livenessProbe:
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /v1/sys/health?standbyok=true
              port: 8200
          readinessProbe:
            timeoutSeconds: 5
            periodSeconds: 30
            exec:
              command:
                - vault
                - status
                - -tls-skip-verify
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -ec
                  - /vault/unseal.sh
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: vaultdata
              mountPath: /vault
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  labels:
    app: vault
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  selector:
    app: vault
  ports:
    - protocol: TCP
      port: 8200
      targetPort: 8200
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vault
spec:
  ingressClassName: nginx
  rules:
    - host: vault.{{ .Values.domains.internal }}
      http:
        paths:
          - backend:
              service:
                name: vault
                port:
                  number: 8200
            path: /
            pathType: Prefix
