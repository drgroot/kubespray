apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.externalsecrets.namespace }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-externalsecrets
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ .Values.externalsecrets.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: external-secrets
    repoURL: https://charts.external-secrets.io
    targetRevision: {{ .Values.externalsecrets.version }}
    helm:
      releaseName: externalsecrets
      values: |-
        installCRDs: true

        promethus:
          enabled: false
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ .Values.stores.vault.secretStore.name }}
spec:
  provider:
    vault:
      server: {{ .Values.stores.vault.server }}
      path: "external-infra"
      version: "v2"
      auth:
        # VaultUserPass authenticates with Vault using the UserPass auth mechanism
        # https://www.vaultproject.io/docs/auth/userpass
        userPass:
          # Path where the UserPass authentication backend is mounted
          path: "userpass"
          username: {{ .Values.stores.vault.secretStore.username }}
          secretRef:
            name: {{ .Values.stores.vault.secretStore.secretRef.name }}
            key: {{ .Values.stores.vault.secretStore.secretRef.key }}
            namespace: {{ .Values.stores.vault.secretStore.secretRef.namespace }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ .Values.stores.vault.secretStore.name }}-kubernetes
spec:
  provider:
    vault:
      server: {{ .Values.stores.vault.server }}
      path: "kubernetes"
      version: "v2"
      auth:
        # VaultUserPass authenticates with Vault using the UserPass auth mechanism
        # https://www.vaultproject.io/docs/auth/userpass
        userPass:
          # Path where the UserPass authentication backend is mounted
          path: "userpass"
          username: {{ .Values.stores.vault.secretStore.username }}
          secretRef:
            name: {{ .Values.stores.vault.secretStore.secretRef.name }}
            key: {{ .Values.stores.vault.secretStore.secretRef.key }}
            namespace: {{ .Values.stores.vault.secretStore.secretRef.namespace }}