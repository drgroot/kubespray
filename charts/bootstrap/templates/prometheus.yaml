apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bootstrap-external-prometheus
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ .Release.Namespace }}
    server: https://kubernetes.default.svc
  project: {{ .Values.project }}
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: {{ .Values.versions.prometheus }}
    helm:
      releaseName: prometheus
      values: |-
        namespaceOverride: {{ .Release.Namespace }}

        defaultRules:
          rules:
            alertmanager: false
        
        alertmanager:
          enabled: false

        grafana:
          ingress:
            ingressClassName: nginx
            enabled: true
            paths:
              - /
            hosts:
              - grafana.{{ .Values.domains.internal }}
            annotations:
              nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
              external-dns.alpha.kubernetes.io/target: "mordorhome.{{ .Values.domains.external }}"
          persistence:
            enabled: true
            storageClassName: {{ .Values.storage.default }}

        prometheus:
          enabled: true
          ingress:
            ingressClassName: nginx
            enabled: true
            paths:
              - /
            hosts:
              - prometheus.{{ .Values.domains.internal }}
            annotations:
              nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
              external-dns.alpha.kubernetes.io/target: "mordorhome.{{ .Values.domains.external }}"
          
          prometheusSpec:
            retention: 20d

            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelector: {}
            serviceMonitorNamespaceSelector: {}
            
            podMonitorSelectorNilUsesHelmValues: false
            podMonitorSelector: {}
            podMonitorNamespaceSelector: {}

            probeSelectorNilUsesHelmValues: false
            probeSelector: {}
            probeNamespaceSelector: {}
            
            scrapeConfigSelectorNilUsesHelmValues: false
            scrapeConfigSelector: {}
            scrapeConfigNamespaceSelector: {}

            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 5Gi
                  storageClassName: {{ .Values.storage.default }}
