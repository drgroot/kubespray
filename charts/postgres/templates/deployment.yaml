apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: {{ .Values.server.password.secretname }}
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.password.secretname }}
                  key: {{ .Values.server.password.key }}
            - name: POSTGRES_PASSWORD
              value: $(PGPASSWORD)
            - name: POSTGRES_DB
              value: {{ .Values.server.databasename }}
            - name: POSTGRES_USER
              value: {{ .Values.server.username }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command: 
                - psql
                - -U
                - {{ .Values.server.username }}
                - -d
                - {{ .Values.server.databasename }}
                - -c
                - "SELECT 1"
            initialDelaySeconds: 45
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command: 
                - psql
                - -U
                - {{ .Values.server.username }}
                - -d
                - {{ .Values.server.databasename }}
                - -c
                - "SELECT 1"
            initialDelaySeconds: 15
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-backup
              mountPath: /backup
      volumes:
        - name: init-scripts
          configMap:
            name: {{ include "postgres.fullname" . }}-scripts
            defaultMode: 0777
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "postgres.fullname" . }}-data
        - name: postgres-backup
          persistentVolumeClaim:
            claimName: {{ include "postgres.fullname" . }}-backup