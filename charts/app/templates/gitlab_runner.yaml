apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.gitlabrunner.namespace }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "app.fullname" $ }}-docker-private-credentials
  namespace: {{ .Values.gitlabrunner.namespace }}
spec:
  secretStoreRef:
    name: {{ $.Values.vault.secretStore.name }}
    kind: ClusterSecretStore
  target:
    name: cluster-private-docker-registry
    template:
      type: kubernetes.io/dockerconfigjson
      {{- with $.Values.dockerconfigTemplate }}
      data:
{{ toYaml . | indent 8 }}
      {{- end }}
  data:
    - remoteRef:
        key: DOCKER
        property: PRIVATE_USERNAME
      secretKey: USERNAME
    - remoteRef:
        key: DOCKER
        property: PRIVATE_PASSWORD
      secretKey: PASSWORD
    - remoteRef:
        key: DOCKER
        property: PRIVATE_HOST
      secretKey: HOST
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-gitlabrunner
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ .Values.gitlabrunner.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: gitlab-runner
    repoURL: https://charts.gitlab.io
    targetRevision: {{ .Values.gitlabrunner.version }}
    helm:
      releaseName: gitlabrunner
      values: |-
        imagePullSecrets:
          - name: cluster-private-docker-registry
        
        gitlabUrl: https://src.yusufali.ca
        runnerToken: glrt-ApsSkmytqgzxDq4Cz_RJ

        rbac:
          create: true

          imagePullSecrets:
            - name: cluster-private-docker-registry

        runners:
          config: |
            [[runners]]
              image_pull_secrets = ["cluster-private-docker-registry"]
              [runners.kubernetes]
                cpu_request = "500m"
                image_pull_secrets = ["cluster-private-docker-registry"]
                node_selector_overwrite_allowed = ".*"

                [runners.kubernetes.node_selector]
                  "kubernetes.io/arch" = "arm64"
