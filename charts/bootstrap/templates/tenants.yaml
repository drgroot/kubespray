apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tenant-repo-credentials
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repo-creds
spec:
  secretStoreRef:
    name: external-infra
    kind: ClusterSecretStore
  target:
    name: tenant-repo-credentials
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repo-creds
      data:
        type: git
        url: https://git.yusufali.ca/
        username: '{{ printf "{{ .USERNAME }}" }}'
        password: '{{ printf "{{ .PASSWORD }}" }}'
  data:
    - secretKey: PASSWORD
      remoteRef:
        key: GIT
        property: GIT_PASSWORD
    - secretKey: USERNAME
      remoteRef:
        key: GIT
        property: GIT_USERNAME
---
{{- range $tenant := .Values.tenants }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $tenant.namespace }}
  labels:
    tenant: approved
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: tenant-{{ $tenant.name }}
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  sourceRepos:
    - "*"
  destinations:
    - namespace: argocd
      server: https://kubernetes.default.svc
    - namespace: {{ $tenant.namespace }}
      server: https://kubernetes.default.svc
  syncWindows:
    - schedule: "0 */4 * * *"
      duration: 1h
      namespaces:
        - {{ $tenant.namespace }}
      applications:
        - "*"
      clusters:
        - "*"
      kind: "allow"
      manualSync: true
  clusterResourceBlacklist:
    - group: "*"
      kind: "*"
  namespaceResourceBlacklist:
    - group: rbac.authorization.k8s.io
      kind: '*'
    - group: authentication.k8s.io
      kind: '*'
    - group: authorization.k8s.io
      kind: '*'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tenant-{{ $tenant.name }}
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ $tenant.namespace }}
    server: https://kubernetes.default.svc
  project: tenant-{{ $tenant.name }}
  source:
    repoURL: {{ $tenant.chart.url }}
    targetRevision: HEAD
    path: {{ $tenant.chart.path }}
    helm:
      releaseName: {{ $tenant.name }}
      values: |
        namespace: {{ $tenant.namespace }}
        argoproject: tenant-{{ $tenant.name }}
        spec:
          project: tenant-{{ $tenant.name }}
{{- end }}