{{- range $tenant := .Values.tenants }}
---
{{- if $tenant.createNamespace }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $tenant.namespace }}
  labels:
    tenant: approved
    client: t
    name: {{ $tenant.name }}
{{- end }}
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: tenant-{{ $tenant.name }}
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  sourceRepos:
    - "*"
  destinations:
    - namespace: '!kube-system'
      server: '*'
    - namespace: '!default'
      server: '*'
  {{- if has "argo" $tenant.permissions }}
    - namespace: argocd
      server: '*'
  {{- end }}
  {{- if has "servc" $tenant.permissions }}
    - namespace: '*'
      server: '*'
  {{- end }}
    - namespace: {{ $tenant.namespace }}
      server: '*'
  syncWindows:
    - schedule: {{ $tenant.syncWindow | default "0 */4 * * *" | quote }}
      duration: 1h
      namespaces:
      {{- if has "argo" $tenant.permissions }}
        - argocd
      {{- end }}
        - {{ $tenant.namespace }}
      applications:
        - "*"
      clusters:
        - "*"
      kind: "allow"
      manualSync: true
  {{- if not (has "servc" $tenant.permissions) }}
  clusterResourceBlacklist:
    - group: "*"
      kind: "*"
  {{- end }}
  namespaceResourceBlacklist:
  {{- if not (has "pvc" $tenant.permissions) }}
    - group: ''
      kind: PersistentVolumeClaim
  {{- end }}
  {{- if not (has "rbac" $tenant.permissions) }}
    - group: rbac.authorization.k8s.io
      kind: '*'
    - group: authentication.k8s.io
      kind: '*'
    - group: authorization.k8s.io
      kind: '*'
  {{- end }}
---
{{- $imagesToUpdate := list }}
{{- range $image := $tenant.updater }}
{{- $imagesToUpdate = append $imagesToUpdate (printf "%s=%s" $image.name $image.image) }}
{{- end }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tenant-{{ $tenant.name }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd-image-updater.argoproj.io/pull-secret: pullsecret:argocd/cluster-docker-secrets
    {{- if ne (len $imagesToUpdate) 0}}
    argocd-image-updater.argoproj.io/image-list: {{ join ", " $imagesToUpdate }}
    {{- end }}

  {{- range $image := $tenant.updater }}
    argocd-image-updater.argoproj.io/{{ $image.name }}.update-strategy: {{ $image.updateStrategy | default "digest" }}
    argocd-image-updater.argoproj.io/{{ $image.name }}.helm.image-name: {{ $image.helmImageName | default (printf "services.internal.%s.image.name" $image.name) }}
    argocd-image-updater.argoproj.io/{{ $image.name }}.helm.image-tag: {{ $image.helmImageVersion | default (printf "versions.%s" $image.name) }} 
    argocd-image-updater.argoproj.io/{{ $image.name }}.force-update: "true"
  {{- end }}

  {{- with $tenant.annotations }}
    {{- toYaml $tenant.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- with $tenant.ignoreDifferences }}
  ignoreDifferences:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  destination:
    namespace: {{ $tenant.namespace }}
    server: https://kubernetes.default.svc
  project: tenant-{{ $tenant.name }}
  sources:
  {{- range $chart := $tenant.sources }}
    - repoURL: {{ $chart.url }}
      targetRevision: HEAD
      path: {{ $chart.path | default "." }}
      helm:
        releaseName: {{ $tenant.name }}{{ $chart.name | default "" }}
      {{- if $chart.valuesFile }}
        valueFiles:
          - $values/{{ $chart.valuesFile }}
      {{- else }}
        values: |
          namespace: {{ $tenant.namespace }}
          project: tenant-{{ $tenant.name }}

          {{- with $.Values.storage }}
          storage:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $.Values.domains }}
          domains:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
    {{- if $chart.valuesRepo }}
    - repoURL: {{ $chart.valuesRepo }}
      targetRevision: HEAD
      ref: values  
    {{- end }}
  {{- end }}
{{- end }}
