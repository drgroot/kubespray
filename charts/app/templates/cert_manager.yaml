apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.certmanager.namespace }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-cert-manager
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ .Values.certmanager.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: cert-manager
    repoURL: https://charts.jetstack.io
    targetRevision: {{ .Values.certmanager.version }}
    helm:
      releaseName: cert-manager
      values: |-
        installCRDs: true

        promethus:
          enabled: false
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster-cloudflare-secret
  namespace: {{ .Values.certmanager.namespace }}
spec:
  secretStoreRef:
    name: {{ .Values.externalsecrets.stores.vault.secretStore.name }}
    kind: ClusterSecretStore
  target:
    name: cluster-cloudflare-secret
  data:
    - secretKey: CLOUDFLARE_PERSONAL_API_KEY
      remoteRef:
        key: {{ .Values.secrets.cloudflare_api.key }}
        property: {{ .Values.secrets.cloudflare_api.property }}
    - secretKey: CLOUDFLARE_PERSONAL_DOMAIN_NAME
      remoteRef:
        key: {{ .Values.secrets.cloudflare_domain.key }}
        property: {{ .Values.secrets.cloudflare_domain.property }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: {{ .Values.certmanager.namespace }}
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.certmanager.email }}
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - dns01:
          cloudflare:
            email: {{ .Values.certmanager.email }}
            apiKeySecretRef:
              name: cluster-cloudflare-secret
              key: CLOUDFLARE_PERSONAL_API_KEY
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}-dynamic-dns
  namespace: {{ .Values.certmanager.namespace }}
  labels:
    app: ddns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ddns
  template:
    metadata:
      labels:
        app: ddns
    spec:
      containers:
        - name: app
          image: hotio/cloudflareddns
          env:
            - name: CF_USER
              value: {{ .Values.certmanager.email }}
            - name: CF_RECORDTYPES
              value: A
            - name: CF_APIKEY
              valueFrom:
                secretKeyRef:
                  name: cluster-cloudflare-secret
                  key: CLOUDFLARE_PERSONAL_API_KEY
            - name: CF_ZONES
              valueFrom:
                secretKeyRef:
                  name: cluster-cloudflare-secret
                  key: CLOUDFLARE_PERSONAL_DOMAIN_NAME
            - name: CF_HOSTS
              value: mordorhome.$(CF_ZONES)
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "app.fullname" . }}-external-dns
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ .Values.certmanager.namespace }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  source:
    chart: external-dns
    repoURL: https://kubernetes-sigs.github.io/external-dns
    targetRevision: {{ .Values.externaldns.version }}
    helm:
      releaseName: external-dns
      values: |-
        env:
          - name: CF_API_KEY
            valueFrom:
              secretKeyRef:
                name: cluster-cloudflare-secret
                key: CLOUDFLARE_PERSONAL_API_KEY
          - name: CF_API_EMAIL
            value: {{ .Values.certmanager.email }}
        
        provider: cloudflare
        domainFilters:
          - yusufali.ca
        sources:
          - ingress
        extraArgs:
          - --default-targets=mordorhome.yusufali.ca
          - --managed-record-types=CNAME