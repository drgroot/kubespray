---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: npm-htpasswd
spec:
  secretStoreRef:
    name: external-infra
    kind: ClusterSecretStore
  target:
    name: npm-htpasswd
    template:
      type: Opaque
      data:
        htpasswd: "{{ `{{ htpasswd .PRIVATE_USERNAME .PRIVATE_PASSWORD }}` }}"
  data:
    - remoteRef:
        key: DOCKER_PRIVATE
        property: npmuser
      secretKey: PRIVATE_USERNAME
    - remoteRef:
        key: DOCKER_PRIVATE
        property: password
      secretKey: PRIVATE_PASSWORD
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: npm-config
data:
  config.yaml: |
    listen: 0.0.0.0:4873
    storage: /verdaccio/storage
    auth:
      htpasswd:
        file: /htpasswd/htpasswd
        max_users: -1
    uplinks:
      npmjs:
        url: https://registry.npmjs.org/
        cache: false
    packages:
      '@servc/*':
        access: $all
        publish: $authenticated
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ .Values.storage.default }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: npm
  labels:
    app: npm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: npm
  template:
    metadata:
      labels:
        app: npm
    spec:
      volumes:
        - name: npmdata
          persistentVolumeClaim:
            claimName: npm
        - name: config
          configMap:
            name: npm-config
        - name: htppasswd
          secret:
            secretName: npm-htpasswd
      containers:
        - name: app
          image: verdaccio/verdaccio:{{ .Values.versions.verdaccio }}
          ports:
            - containerPort: 4873
              name: http
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 50m
              memory: 64Mi
          livenessProbe:
            httpGet:
              path: /-/ping
              port: 4873
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /-/ping
              port: http
            initialDelaySeconds: 5
          volumeMounts:
            - name: htppasswd
              mountPath: /htpasswd
            - name: npmdata
              mountPath: /verdaccio/storage
            - name: config
              mountPath: /verdaccio/conf
---
apiVersion: v1
kind: Service
metadata:
  name: npm
  labels:
    app: npm
spec:
  selector:
    app: npm
  ports:
    - protocol: TCP
      port: 4873
      targetPort: 4873
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: npm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: mordorhome.{{ .Values.domains.external }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 512m
    nginx.ingress.kubernetes.io/client_max_body_size: 512m
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "*.{{ .Values.domains.external }}"
      secretName: wildcard-yusufali
  ingressClassName: nginx
  rules:
    - host: npm.{{ .Values.domains.external }}
      http:
        paths:
          - backend:
              service:
                name: npm
                port:
                  number: 4873
            path: /
            pathType: Prefix
