apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.ballista.namespace }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ballista-datalake
  namespace: {{ .Values.ballista.namespace }}
spec:
  storageClassName: nfs-thorin-datalake
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ballista-scheduler
  namespace: {{ .Values.ballista.namespace }}
  labels:
    app: ballista-scheduler
spec:
  ports:
    - port: 50050
      name: scheduler
    - port: 80
      name: scheduler-ui
  selector:
    app: ballista-scheduler
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: ballista
  namespace: {{ .Values.ballista.namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: ballista.k8s.private
      http:
        paths:
        - backend:
            service:
              name: ballista-scheduler
              port:
                number: 50050
          path: /
          pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: ballista-scheduler-ui
  namespace: {{ .Values.ballista.namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: ballista-ui.k8s.private
      http:
        paths:
        - backend:
            service:
              name: ballista-scheduler
              port:
                number: 80
          path: /
          pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ballista-scheduler
  namespace: {{ .Values.ballista.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ballista-scheduler
  template:
    metadata:
      labels:
        app: ballista-scheduler
        ballista-cluster: ballista
    spec:
      containers:
        - name: ballista-scheduler
          image: {{ .Values.ballista.repo }}/arrow-ballista-scheduler
          imagePullPolicy: Always
          args: ["--bind-port=50050"]
          ports:
            - containerPort: 50050
              name: flight
            - containerPort: 80
              name: webui
          volumeMounts:
            - mountPath: /mnt
              name: data
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ballista-datalake
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ballista-executor
  namespace: {{ .Values.ballista.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ballista-executor
  template:
    metadata:
      labels:
        app: ballista-executor
        ballista-cluster: ballista
    spec:
      containers:
        - name: ballista-executor
          image: {{ .Values.ballista.repo }}/arrow-ballista-executor
          imagePullPolicy: Always
          args:
            - "--bind-port=50051"
            - "--scheduler-host=ballista-scheduler"
            - "--scheduler-port=50050"
          ports:
            - containerPort: 50051
              name: flight
          volumeMounts:
            - mountPath: /mnt
              name: data
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ballista-datalake
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: ballista-executor
  namespace: {{ .Values.ballista.namespace }}
spec:
  scaleTargetRef:
    name: ballista-executor
  minReplicaCount: 0
  maxReplicaCount: {{ .Values.ballista.maxExecutors }}
  triggers:
    - type: external
      metadata:
        scalerAddress: ballista-scheduler.{{ .Values.ballista.namespace }}.svc.cluster.local:50050